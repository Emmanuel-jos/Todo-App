{"version":3,"sources":["components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","useState","str","setstr","todo","setodo","handleSubmit","text","id","Date","now","status","deleted","className","value","onKeyPress","e","key","onChange","target","type","placeholder","onClick","console","log","map","obj","filter","obj1","name","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qLAyGeA,MArGf,WAAkB,IAAD,EACb,EAAmBC,mBAAS,IAA5B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAAoBF,mBAAS,IAA7B,mBAAOG,EAAP,KAAYC,EAAZ,KAGMC,EAAa,WAAKD,EAAO,GAAD,mBAAKD,GAAL,CAAU,CAACG,KAAML,EAAIM,GAAIC,KAAKC,MAAMC,QAAQ,EAAMC,SAAS,MAAUT,EAAO,KAQ1G,OAEI,sBAAKU,UAAU,QAAf,UACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,SAAf,SACI,oBAAIA,UAAU,QAAd,6BAEJ,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACI,uBAAOC,MAAOZ,EAAKM,GAAG,UAAUO,WAf/B,SAAAC,GACN,UAARA,EAAEC,KACDX,KAayEY,SAAU,SAACF,GAAKb,EAAOa,EAAEG,OAAOL,QAASM,KAAK,OAAOC,YAAa,cAE/H,mBAAGb,GAAG,UAAUc,QAAShB,EAAcO,UAAU,iBAChD,EAAAU,SAAQC,IAAR,oBAAepB,OAEpB,qBAAKS,UAAU,QAAf,SACCT,EAAKqB,KAAI,SAACC,GACP,OAAgB,IAAbA,EAAIf,SAAgC,IAAde,EAAId,QAE7B,sBAAKC,UAAU,OAAf,UACA,sBAAKA,UAAU,OAAf,UACI,uBAAOK,SAAU,SAACF,GACdX,EAAOD,EAAKuB,QAAO,SAACC,GAKhB,OAJGF,EAAIlB,KAAKoB,EAAKpB,KAEboB,EAAKjB,QAAO,GAETiB,OAEZd,MAAOY,EAAIf,OAAQS,KAAK,WAAWS,KAAK,GAAGrB,GAAG,KACjD,4BAAIkB,EAAInB,UAEZ,qBAAKM,UAAU,QAAf,SACI,mBAAGS,QAAS,WACRjB,EAAOD,EAAKuB,QAAO,SAACC,GAKhB,OAJGA,EAAKpB,KAAKkB,EAAIlB,KAEboB,EAAKhB,SAAQ,GAEVgB,OAEZf,UAAU,sBAGT,gBAMR,sBAAKL,GAAG,YAAR,UACI,sBAAKK,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,qBACCT,EAAKqB,KAAI,SAACC,GACP,OAAgB,IAAbA,EAAIf,SAAgC,IAAde,EAAId,QAEzB,oBAAIC,UAAU,WAAd,SAA0Ba,EAAInB,OAEtB,WAIpB,sBAAKM,UAAU,cAAf,UACA,oBAAIA,UAAU,YAAd,sBACKT,EAAKqB,KAAI,SAACC,GACP,OAAiB,IAAdA,EAAId,QAEH,oBAAIC,UAAU,WAAd,SAA0Ba,EAAInB,OAEtB,WAGpB,sBAAKM,UAAU,aAAf,UACA,oBAAIA,UAAU,YAAd,wBACKT,EAAKqB,KAAI,SAACC,GACP,OAAgB,IAAbA,EAAIf,OAEH,oBAAIE,UAAU,WAAd,SAA0Ba,EAAInB,OAEtB,kBCpFjCuB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b999aeed.chunk.js","sourcesContent":["\r\nimport './Todos.css'\r\nimport {useState} from 'react'\r\n\r\nfunction Todos() {\r\n    const [str,setstr]=useState('')\r\n    const [todo,setodo]=useState([])\r\n\r\n\r\n    const handleSubmit=()=>{setodo([...todo,{text: str,id: Date.now(),status: false,deleted: false}]); setstr('')}\r\n\r\n    const handleKeypress=e=>{\r\n        if(e.key===\"Enter\"){\r\n            handleSubmit();\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"outer\">\r\n            <div className=\"inner\">\r\n                <div className=\"header\">\r\n                    <h2 className=\"title\"> My Todo App </h2>\r\n                </div>\r\n                <div className=\"body\">\r\n                    <div className=\"insidebody\">\r\n                        <input value={str} id=\"myinput\" onKeyPress={handleKeypress}  onChange={(e)=>{setstr(e.target.value)}} type=\"text\" placeholder= \"Add Items\" />\r\n                    \r\n                        <i id=\"trigger\" onClick={handleSubmit} className=\"fas fa-plus\"></i>\r\n                        {console.log(...todo)}\r\n                    </div>\r\n                    <div className=\"todos\">   \r\n                    {todo.map((obj)=>{\r\n                        if(obj.status===false && obj.deleted===false)\r\n                        return(\r\n                        <div className=\"todo\">\r\n                        <div className=\"left\">\r\n                            <input onChange={(e)=>{\r\n                                setodo(todo.filter((obj1)=>{\r\n                                    if(obj.id===obj1.id)\r\n                                    {\r\n                                        obj1.status=true\r\n                                    }\r\n                                    return obj1;\r\n                                }))\r\n                            }} value={obj.status} type=\"checkbox\" name=\"\" id=\"\" />\r\n                            <p>{obj.text}</p>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                            <i onClick={()=>{\r\n                                setodo(todo.filter((obj1)=>{\r\n                                    if(obj1.id===obj.id)\r\n                                    {\r\n                                        obj1.deleted=true\r\n                                    }\r\n                                    return obj1;\r\n                                }))\r\n                            }} className=\"fas fa-times\" ></i>\r\n                        </div>\r\n                    </div>)\r\n                    else return null;\r\n                    })} \r\n                        \r\n                    </div>         \r\n                </div>\r\n            </div>\r\n                        <div id=\"container\">\r\n                            <div className=\"innerleft\">\r\n                                <h1 className=\"outsideh1\">Active </h1>\r\n                                {todo.map((obj)=>{\r\n                                    if(obj.status===false && obj.deleted===false)\r\n                                    return(\r\n                                        <h1 className=\"insideh1\">{obj.text}</h1>\r\n                                    )\r\n                                    else return null;\r\n                                    \r\n                                })}\r\n                            </div>\r\n                            <div className=\"innermiddle\">\r\n                            <h1 className=\"outsideh1\">Deleted </h1>\r\n                                {todo.map((obj)=>{\r\n                                    if(obj.deleted===true)\r\n                                    return(\r\n                                        <h1 className=\"insideh1\">{obj.text}</h1>\r\n                                    )\r\n                                    else return null\r\n                                })}\r\n                            </div>\r\n                            <div className=\"innerright\">\r\n                            <h1 className=\"outsideh1\">Completed </h1>\r\n                                {todo.map((obj)=>{\r\n                                    if(obj.status===true)\r\n                                    return(\r\n                                        <h1 className=\"insideh1\">{obj.text}</h1>\r\n                                    )\r\n                                    else return null;\r\n                                    \r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                 \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n\r\n","import React from 'react'\nimport Todos from './components/Todos'\n\nfunction App() {\n  return (\n    <div>\n      <Todos />\n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}